name: Release

on:
  push:
    branches:
      - main # Replace with your default branch if it's different

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy

    - name: Check for version change
      id: check_version
      run: |
        git fetch --prune --unshallow
        VERSION_CHANGED=$(git diff HEAD~1 HEAD -- Cargo.toml | grep '^+version' | sed -e 's/+version = "//' -e 's/"$//')
        if [ -n "$VERSION_CHANGED" ]; then
          echo "New version: $VERSION_CHANGED"
          echo "::set-output name=version_changed::true"
          echo "::set-output name=version::$VERSION_CHANGED"
        else
          echo "No version change detected."
          echo "::set-output name=version_changed::false"
        fi
      shell: bash

    - name: Build release
      if: steps.check_version.outputs.version_changed == 'true'
      run: cargo build --release

    - name: Create GitHub Release
      if: steps.check_version.outputs.version_changed == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/release/YOUR_BINARY_NAME # Replace with your actual binary name
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "Creating a new release for v${{ steps.check_version.outputs.version }}"
